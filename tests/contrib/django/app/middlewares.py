# Copyright 2019, OpenTelemetry Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from django.http import HttpResponse

try:
    from django.utils.deprecation import MiddlewareMixin
    MiddlewareClass = MiddlewareMixin
except ImportError:
    MiddlewareClass = object


class CatchExceptionMiddleware(MiddlewareClass):
    def process_exception(self, request, exception):
        return HttpResponse(status=500)


class HandleErrorMiddlewareSuccess(MiddlewareClass):
    """ Converts an HttpError (that may be returned from an exception handler)
        generated by a view or previous middleware and returns a 200
        HttpResponse.
    """
    def process_response(self, request, response):
        if response.status_code == 500:
            return HttpResponse(status=200)

        return response


class HandleErrorMiddlewareClientError(MiddlewareClass):
    """ Converts an HttpError (that may be returned from an exception handler)
        generated by a view or previous middleware and returns a 404
        HttpResponse.
    """
    def process_response(self, request, response):
        if response.status_code == 500:
            return HttpResponse(status=404)

        return response
